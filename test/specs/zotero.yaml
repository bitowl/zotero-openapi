swagger: '2.0'
info:
  version: 3.0.0
  title: Zotero Web API
  description: |
    Zotero Web API https://www.zotero.org/support/dev/web_api/v3/basics
    
    Test implementation in Swagger-UI by @zuphilip
    
    Edit the configuration at https://github.com/zuphilip/swagger-ui/blob/gh-pages/test/specs/zotero.yaml
    
    Adapted https://github.com/stadja/cowaboo see also http://stadja.net:81/cowaboo-swagger/#!/zotero/
schemes:
- https
host: api.zotero.org
basePath: /
securityDefinitions: {}
consumes:
- application/json
produces:
- application/json
tags:
  - name: Items
  - name: Collections
  - name: Tags
  - name: Searches
  - name: Privileges
  - name: Schema
    description: Item Type and Fields
####################
#   define PATHS   #
####################
paths:
  /itemTypes:
    get:
      description: Getting All Item Types
      tags:
        - Schema
      operationId: GETgetItemTypes
      responses:
        200:
          description: OK
        304:
          description: Not Modified
        400:
          description: Bad Request
  /itemFields:
    get:
      description: Getting All Item Fields
      tags:
        - Schema
      responses:
        200:
          description: OK
        304:
          description: Not Modified
        400:
          description: Bad Request
  /itemTypeFields:
    get:
      description: Getting All Valid Fields for an Item Type
      tags:
        - Schema
      responses:
        200:
          description: OK
        304:
          description: Not Modified
        400:
          description: Bad Request
      parameters:
      - $ref: '#/parameters/ItemType'
  /itemTypeCreatorTypes:
    get:
      description: Getting Valid Creator Types for an Item Type
      tags:
        - Schema
      responses:
        200:
          description: OK
        304:
          description: Not Modified
        400:
          description: Bad Request
      parameters:
        - $ref: '#/parameters/ItemType'
  /creatorFields:
    get:
      description: Getting Localized Creator Fields
      tags:
        - Schema
      responses:
        200:
          description: OK
        304:
          description: Not Modified
        400:
          description: Bad Request
  /items/new:
    get:
      description: Getting a Template for a New Item
      tags:
        - Schema
      operationId: GETgetItemTemplate
      parameters:
      - $ref: '#/parameters/ItemType'
      responses:
        200:
          description: OK
        304:
          description: Not Modified
        400:
          description: Bad Request
  /users/{userId}/groups:
    get:
      description: The set of groups the current API key has access to, including public groups the key owner belongs to even if the key doesn't have explicit permissions for them.
      tags:
        - Privileges
      operationId: GETgetGroupsFromUserId
      parameters:
        - $ref: '#/parameters/UserId'
        - $ref: '#/parameters/Format-multi-groups'
        - $ref: '#/parameters/Key-Optional'
        - $ref: '#/parameters/Q'
        - $ref: '#/parameters/Sort'
        - $ref: '#/parameters/Direction'
        - $ref: '#/parameters/Limit'
        - $ref: '#/parameters/Start'
      responses:
        200:
          description: OK
        304:
          description: Not Modified
        400:
          description: Bad Request
  /keys/{key}:
    get:
      description: The user id and privileges of the given API key.
      tags:
        - Privileges
      operationId: GETgetPrivilegesOfKey
      parameters:
        - $ref: '#/parameters/Key-Path'
      responses:
        200:
          description: OK
        304:
          description: Not Modified
        400:
          description: Bad Request
  /{users_or_groups}/{elementId}/items:
    get:
      description: The set of all items in the library.
      tags:
        - Items
      operationId: GETgetItems
      parameters:
        - $ref: '#/parameters/UsersOrGroups'
        - $ref: '#/parameters/ElementId'
        - $ref: '#/parameters/Key'
        - $ref: '#/parameters/Format-multi-items'
        - $ref: '#/parameters/ItemType-Search'
        - $ref: '#/parameters/Q'
        - $ref: '#/parameters/QMode'
        - $ref: '#/parameters/Since'
        - $ref: '#/parameters/Tag-Search'
        - $ref: '#/parameters/Sort'
        - $ref: '#/parameters/Direction'
        - $ref: '#/parameters/Limit'
        - $ref: '#/parameters/Start'
      responses:
        200:
          description: OK
        304:
          description: Not Modified
        400:
          description: Bad Request
    post:
      description: Create a new item.
      tags:
        - Items
      operationId: POSTcreateItem
      parameters:
        - $ref: '#/parameters/UsersOrGroups'
        - $ref: '#/parameters/ElementId'
        - $ref: '#/parameters/Key'
        - name: format
          in: query
          required: true
          x-is-map: false
          enum:
          - json
          type: string
          description: Answer format.
        - $ref: '#/parameters/Body-Item'
      responses:
        200:
          description: OK
        304:
          description: Not Modified
        400:
          description: Bad Request
        409:
          description: 'Conflict: The target library is locked.'
        412:
          description: 'Precondition Failed: The provided Zotero-Write-Token has already been submitted.'
        413:
          description: 'Request Entity Too Large: Too many items submitted'
  /{users_or_groups}/{elementId}/items/top:
    get:
      description: The set of all top-level items in the library.
      tags:
        - Items
      operationId: GETgetTopItems
      parameters:
        - $ref: '#/parameters/UsersOrGroups'
        - $ref: '#/parameters/ElementId'
        - $ref: '#/parameters/Key'
        - $ref: '#/parameters/Format-multi-items'
        - $ref: '#/parameters/ItemType-Search'
        - $ref: '#/parameters/Q'
        - $ref: '#/parameters/QMode'
        - $ref: '#/parameters/Since'
        - $ref: '#/parameters/Tag-Search'
        - $ref: '#/parameters/Sort'
        - $ref: '#/parameters/Direction'
        - $ref: '#/parameters/Limit'
        - $ref: '#/parameters/Start'
      responses:
        200:
          description: OK
        304:
          description: Not Modified
        400:
          description: Bad Request
  /{users_or_groups}/{elementId}/items/trash:
    get:
      description: The set of items in the trash.
      tags:
        - Items
      operationId: GETgetTrashItems
      parameters:
        - $ref: '#/parameters/UsersOrGroups'
        - $ref: '#/parameters/ElementId'
        - $ref: '#/parameters/Key'
        - $ref: '#/parameters/Format-multi-items'
        - $ref: '#/parameters/ItemType-Search'
        - $ref: '#/parameters/Q'
        - $ref: '#/parameters/QMode'
        - $ref: '#/parameters/Since'
        - $ref: '#/parameters/Tag-Search'
        - $ref: '#/parameters/Sort'
        - $ref: '#/parameters/Direction'
        - $ref: '#/parameters/Limit'
        - $ref: '#/parameters/Start'
      responses:
        200:
          description: OK
        304:
          description: Not Modified
        400:
          description: Bad Request
  /{users_or_groups}/{elementId}/items/{itemKey}:
    get:
      description: The set of all items in the library.
      tags:
        - Items
      operationId: GETgetSpecificItem
      parameters:
        - $ref: '#/parameters/UsersOrGroups'
        - $ref: '#/parameters/ElementId'
        - $ref: '#/parameters/Key'
        - $ref: '#/parameters/ItemKey'
        - $ref: '#/parameters/Format-single-items'
        - $ref: '#/parameters/Include'
        - $ref: '#/parameters/Content'
        - $ref: '#/parameters/Style'
         
      responses:
        200:
          description: OK
        304:
          description: Not Modified
        400:
          description: Bad Request
    delete:
      description: Doesn't Work - Deleting an item.
      tags:
        - Items
      operationId: DELETEdeleteItem
      parameters:
        - $ref: '#/parameters/UsersOrGroups'
        - $ref: '#/parameters/ElementId'
        - $ref: '#/parameters/Key'
        - $ref: '#/parameters/ItemKey'
        - $ref: '#/parameters/If-Unmodified-Since-Version'
      responses:
        200:
          description: OK
        409:
          description: 'Conflict: The target library is locked.'
        412:
          description: 'Precondition Failed: The item has changed since retrieval (i.e., the provided item version no longer matches).'
    patch:
      description: Updating an Existing Item.
      tags:
        - Items
      operationId: PATCHupdateItem
      parameters:
        - $ref: '#/parameters/UsersOrGroups'
        - $ref: '#/parameters/ElementId'
        - $ref: '#/parameters/Key'
        - $ref: '#/parameters/ItemKey'
        - $ref: '#/parameters/Body-Update'
      responses:
        200:
          description: OK
        400:
          description: 'Bad Request: Invalid type/field; unparseable JSON'
        409:
          description: 'Conflict: The target library is locked.'
        412:
          description: 'Precondition Failed: The item has changed since retrieval (i.e., the provided item version no longer matches).'
  /{users_or_groups}/{elementId}/items/{itemKey}/children:
    get:
      description: The set of all child items under a specific item.
      tags:
        - Items
      operationId: GETgetChildItemsOfSpecificItem
      parameters:
        - $ref: '#/parameters/UsersOrGroups'
        - $ref: '#/parameters/ElementId'
        - $ref: '#/parameters/Key'
        - $ref: '#/parameters/ItemKey'
        - $ref: '#/parameters/Format-multi-items'
        - $ref: '#/parameters/ItemType-Search'
        - $ref: '#/parameters/Q'
        - $ref: '#/parameters/QMode'
        - $ref: '#/parameters/Since'
        - $ref: '#/parameters/Tag-Search'
        - $ref: '#/parameters/Sort'
        - $ref: '#/parameters/Direction'
        - $ref: '#/parameters/Limit'
        - $ref: '#/parameters/Start'
      responses:
        200:
          description: OK
        304:
          description: Not Modified
        400:
          description: Bad Request
  /{users_or_groups}/{elementId}/items/{itemKey}/tags:
    get:
      description: The set of all tags associated with a specific item.
      tags:
        - Tags
      operationId: GETgetTagsOfSpecificItem
      parameters:
        - $ref: '#/parameters/UsersOrGroups'
        - $ref: '#/parameters/ElementId'
        - $ref: '#/parameters/Key'
        - $ref: '#/parameters/ItemKey'
        - $ref: '#/parameters/Format-multi-tags'
        - $ref: '#/parameters/ItemType-Search'
        - $ref: '#/parameters/Q'
        - $ref: '#/parameters/QMode'
        - $ref: '#/parameters/Since'
        - $ref: '#/parameters/Tag-Search'
        - $ref: '#/parameters/Sort'
        - $ref: '#/parameters/Direction'
        - $ref: '#/parameters/Limit'
        - $ref: '#/parameters/Start'
      responses:
        200:
          description: OK
        304:
          description: Not Modified
        400:
          description: Bad Request
  /{users_or_groups}/{elementId}/tags:
    get:
      description: The set of all tags in the library.
      tags:
        - Tags
      operationId: GETgetTags
      parameters:
        - $ref: '#/parameters/UsersOrGroups'
        - $ref: '#/parameters/ElementId'
        - $ref: '#/parameters/Key'
        - $ref: '#/parameters/Format-multi-tags'
        - $ref: '#/parameters/ItemType-Search'
        - $ref: '#/parameters/Q'
        - $ref: '#/parameters/QMode'
        - $ref: '#/parameters/Since'
        - $ref: '#/parameters/Tag-Search'
        - $ref: '#/parameters/Sort'
        - $ref: '#/parameters/Direction'
        - $ref: '#/parameters/Limit'
        - $ref: '#/parameters/Start'
      responses:
        200:
          description: ok
        304:
          description: Not Modified
        400:
          description: Bad Request
  /{users_or_groups}/{elementId}/tags/{tagName}:
    get:
      description: The set of tags (i.e., of all types) matching a specific name.
      tags:
        - Tags
      operationId: GETgetSPecificTag
      parameters:
        - $ref: '#/parameters/UsersOrGroups'
        - $ref: '#/parameters/ElementId'
        - $ref: '#/parameters/Key'
        - $ref: '#/parameters/TagName'
        - $ref: '#/parameters/Format-single-tags'
        - $ref: '#/parameters/ItemType-Search'
        - $ref: '#/parameters/Q'
        - $ref: '#/parameters/QMode'
        - $ref: '#/parameters/Since'
        - $ref: '#/parameters/Tag-Search'
        - $ref: '#/parameters/Sort'
        - $ref: '#/parameters/Direction'
        - $ref: '#/parameters/Limit'
        - $ref: '#/parameters/Start'
      responses:
        200:
          description: OK
        304:
          description: Not Modified
        400:
          description: Bad Request
  /{users_or_groups}/{elementId}/collections:
    get:
      description: The set of collections in the library.
      tags:
        - Collections
      operationId: GETgetCollections
      parameters:
        - $ref: '#/parameters/UsersOrGroups'
        - $ref: '#/parameters/ElementId'
        - $ref: '#/parameters/Key'
        - $ref: '#/parameters/Format-multi-collections'
        - $ref: '#/parameters/ItemType-Search'
        - $ref: '#/parameters/Q'
        - $ref: '#/parameters/QMode'
        - $ref: '#/parameters/Since'
        - $ref: '#/parameters/Tag-Search'
        - $ref: '#/parameters/Sort'
        - $ref: '#/parameters/Direction'
        - $ref: '#/parameters/Limit'
        - $ref: '#/parameters/Start'
      responses:
        200:
          description: OK
        304:
          description: Not Modified
        400:
          description: Bad Request
    post:
      description: Create a collection.
      tags:
        - Collections
      operationId: POSTcreateCollection
      parameters:
      - $ref: '#/parameters/UsersOrGroups'
      - $ref: '#/parameters/ElementId'
      - $ref: '#/parameters/Key'
      - $ref: '#/parameters/Body-Collection'
      responses:
        200:
          description: ok
        409:
          description: 'Conflict: The target library is locked'
        412:
          description: 'Precondition Failed: The provided Zotero-Write-Token has already been submitted.'
  /{users_or_groups}/{elementId}/collections/top:
    get:
      description: The set of all top-level collections in the library.
      tags:
        - Collections
      operationId: GETgetTopCollections
      parameters:
        - $ref: '#/parameters/UsersOrGroups'
        - $ref: '#/parameters/ElementId'
        - $ref: '#/parameters/Key'
        - $ref: '#/parameters/Format-multi-collections'
        - $ref: '#/parameters/ItemType-Search'
        - $ref: '#/parameters/Q'
        - $ref: '#/parameters/QMode'
        - $ref: '#/parameters/Since'
        - $ref: '#/parameters/Tag-Search'
        - $ref: '#/parameters/Sort'
        - $ref: '#/parameters/Direction'
        - $ref: '#/parameters/Limit'
        - $ref: '#/parameters/Start'
      responses:
        200:
          description: OK
        304:
          description: Not Modified
        400:
          description: Bad Request
  /{users_or_groups}/{elementId}/collections/{collectionKey}:
    get:
      description: A specific collection in the library.
      tags:
        - Collections
      operationId: GETgetSpecificCollection
      parameters:
        - $ref: '#/parameters/UsersOrGroups'
        - $ref: '#/parameters/ElementId'
        - $ref: '#/parameters/Key'
        - $ref: '#/parameters/CollectionKey'
        - $ref: '#/parameters/Format-single-collections'
        - $ref: '#/parameters/ItemType-Search'
        - $ref: '#/parameters/Q'
        - $ref: '#/parameters/QMode'
        - $ref: '#/parameters/Since'
        - $ref: '#/parameters/Tag-Search'
        - $ref: '#/parameters/Sort'
        - $ref: '#/parameters/Direction'
        - $ref: '#/parameters/Limit'
        - $ref: '#/parameters/Start'
      responses:
        200:
          description: OK
        304:
          description: Not Modified
        400:
          description: Bad Request
    put:
      description: Doesn't Work - Modify a specific collection in the library.
      tags:
        - Collections
      operationId: PUTupdateCollection
      parameters:
        - $ref: '#/parameters/UsersOrGroups'
        - $ref: '#/parameters/ElementId'
        - $ref: '#/parameters/Key'
        - $ref: '#/parameters/CollectionKey'
        - $ref: '#/parameters/Body-Update-Collection'
      responses:
        200:
          description: OK
        409:
          description: 'Conflict: The target library is locked'
        412:
          description: 'Precondition Failed: The provided Zotero-Write-Token has already been submitted.'
    delete:
      description: Doesn't Work - delete a specific collection in the library.
      tags:
        - Collections
      operationId: DELETEdeleteCollection
      parameters:
        - $ref: '#/parameters/UsersOrGroups'
        - $ref: '#/parameters/ElementId'
        - $ref: '#/parameters/Key'
        - $ref: '#/parameters/CollectionKey'
        - $ref: '#/parameters/If-Unmodified-Since-Version'
      responses:
        200:
          description: ok
        409:
          description: 'Conflict: The target library is locked'
        412:
          description: 'Precondition Failed: The provided Zotero-Write-Token has already been submitted.'
  /{users_or_groups}/{elementId}/collections/{collectionKey}/collections:
    get:
      description: The set of subcollections within a specific collection in the library.
      tags:
        - Collections
      operationId: GETgetSpecificCollectionSubCollections
      parameters:
        - $ref: '#/parameters/UsersOrGroups'
        - $ref: '#/parameters/ElementId'
        - $ref: '#/parameters/Key'
        - $ref: '#/parameters/CollectionKey'
        - $ref: '#/parameters/Format-multi-collections'
        - $ref: '#/parameters/ItemType-Search'
        - $ref: '#/parameters/Q'
        - $ref: '#/parameters/QMode'
        - $ref: '#/parameters/Since'
        - $ref: '#/parameters/Tag-Search'
        - $ref: '#/parameters/Sort'
        - $ref: '#/parameters/Direction'
        - $ref: '#/parameters/Limit'
        - $ref: '#/parameters/Start'
      responses:
        200:
          description: OK
        304:
          description: Not Modified
        400:
          description: Bad Request
  /{users_or_groups}/{elementId}/collections/{collectionKey}/items:
    get:
      description: The set of all items within a specific collection in the library.
      tags:
        - Collections
      operationId: GETgetSpecificCollectionItems
      parameters:
        - $ref: '#/parameters/UsersOrGroups'
        - $ref: '#/parameters/ElementId'
        - $ref: '#/parameters/Key'
        - $ref: '#/parameters/CollectionKey'
        - $ref: '#/parameters/Format-multi-items'
        - $ref: '#/parameters/ItemType-Search'
        - $ref: '#/parameters/Q'
        - $ref: '#/parameters/QMode'
        - $ref: '#/parameters/Since'
        - $ref: '#/parameters/Tag-Search'
        - $ref: '#/parameters/Sort'
        - $ref: '#/parameters/Direction'
        - $ref: '#/parameters/Limit'
        - $ref: '#/parameters/Start'
      responses:
        200:
          description: OK
        304:
          description: Not Modified
        400:
          description: Bad Request
  /{users_or_groups}/{elementId}/collections/{collectionKey}/items/top:
    get:
      description: The set of top-level items within a specific collection in the library.
      tags:
        - Collections
      operationId: GETgetSpecificCollectionTopItems
      parameters:
        - $ref: '#/parameters/UsersOrGroups'
        - $ref: '#/parameters/ElementId'
        - $ref: '#/parameters/Key'
        - $ref: '#/parameters/CollectionKey'
        - $ref: '#/parameters/Format-multi-items'
        - $ref: '#/parameters/ItemType-Search'
        - $ref: '#/parameters/Q'
        - $ref: '#/parameters/QMode'
        - $ref: '#/parameters/Since'
        - $ref: '#/parameters/Tag-Search'
        - $ref: '#/parameters/Sort'
        - $ref: '#/parameters/Direction'
        - $ref: '#/parameters/Limit'
        - $ref: '#/parameters/Start'
      responses:
        200:
          description: OK
        304:
          description: Not Modified
        400:
          description: Bad Request
  /{users_or_groups}/{elementId}/collections/{collectionKey}/tags:
    get:
      description: The set of tags within a specific collection in the library.
      tags:
        - Tags
      operationId: GETgetSpecificCollectionTags
      parameters:
        - $ref: '#/parameters/UsersOrGroups'
        - $ref: '#/parameters/ElementId'
        - $ref: '#/parameters/Key'
        - $ref: '#/parameters/CollectionKey'
        - $ref: '#/parameters/Format-multi-tags'
        - $ref: '#/parameters/ItemType-Search'
        - $ref: '#/parameters/Q'
        - $ref: '#/parameters/QMode'
        - $ref: '#/parameters/Since'
        - $ref: '#/parameters/Tag-Search'
        - $ref: '#/parameters/Sort'
        - $ref: '#/parameters/Direction'
        - $ref: '#/parameters/Limit'
        - $ref: '#/parameters/Start'
      responses:
        200:
          description: OK
        304:
          description: Not Modified
        400:
          description: Bad Request
  /{users_or_groups}/{elementId}/searches:
    get:
      description: The set of all saved searches in the library.
      tags:
        - Searches
      operationId: GETgetSearches
      parameters:
        - $ref: '#/parameters/UsersOrGroups'
        - $ref: '#/parameters/ElementId'
        - $ref: '#/parameters/Key'
        - $ref: '#/parameters/Format-multi-searches'
        - $ref: '#/parameters/ItemType-Search'
        - $ref: '#/parameters/Q'
        - $ref: '#/parameters/QMode'
        - $ref: '#/parameters/Since'
        - $ref: '#/parameters/Tag-Search'
        - $ref: '#/parameters/Sort'
        - $ref: '#/parameters/Direction'
        - $ref: '#/parameters/Limit'
        - $ref: '#/parameters/Start'
      responses:
        200:
          description: OK
        304:
          description: Not Modified
        400:
          description: Bad Request
    post:
      description: Create a new search.
      tags:
        - Searches
      operationId: POSTcreateSearch
      parameters:
        - $ref: '#/parameters/UsersOrGroups'
        - $ref: '#/parameters/ElementId'
        - $ref: '#/parameters/Key'
        - $ref: '#/parameters/Body-Search'
      responses:
        200:
          description: OK
        304:
          description: Not Modified
        400:
          description: Bad Request
  /{users_or_groups}/{elementId}/searches/{searchKey}:
    get:
      description: A specific saved search in the library.
      tags:
        - Searches
      operationId: GETgetSpecificSearch
      parameters:
        - $ref: '#/parameters/UsersOrGroups'
        - $ref: '#/parameters/ElementId'
        - $ref: '#/parameters/Key'
        - $ref: '#/parameters/SearchKey'
        - $ref: '#/parameters/Format-single-searches'
        - $ref: '#/parameters/Sort'
        - $ref: '#/parameters/Direction'
        - $ref: '#/parameters/Limit'
        - $ref: '#/parameters/Start'
      responses:
        200:
          description: OK
        304:
          description: Not Modified
        400:
          description: Bad Request
##################################
#   define reusable PARAMETERS   #
##################################
parameters:
  UsersOrGroups:
    name: users_or_groups
    in: path
    required: true
    enum:
      - groups
      - users
    type: string
    description: Do you want to make a search on a group or a user?
  ElementId:
    name: elementId
    in: path
    required: true
    default: ''
    type: string
    description: '<ul><li>If "groups": the group Id (ex: 471609 for the <a href="https://www.zotero.org/groups/swaggerui-open-group">swaggerui-open-group</a>)</li><li>If "users": the User IDs are different from usernames and can be found on the <a target="_blank" href="https://www.zotero.org/settings/keys">API Keys page</a> and in OAuth responses. (ex: 2897918 for swaggerui user id)</li></ul>'
  ItemKey:
    name: itemKey
    in: path
    required: true
    type: string
    description: A specific Item in the library.
  ItemType:
    name: itemType
    in: query
    required: true
    default: journalArticle
    type: string
    description: Get all the item types by making <a href="#!/zotero/getItemTypes" target="_blank">an item type request</a>
  UserId:
    name: userId
    in: path
    required: true
    default: '2897918'
    type: string
    description: User IDs are different from usernames and can be found on the <a target="_blank" href="https://www.zotero.org/settings/keys">API Keys page</a> and in OAuth responses.
  TagName:
    name: tagName
    in: path
    required: true
    type: string
    description: Url encoded tag name
  CollectionKey:
    name: collectionKey
    in: path
    required: true
    type: string
    description: A specific collection in the library
  SearchKey:
    name: searchKey
    in: path
    required: true
    type: string
    description: A specific saved search in the library.
  If-Unmodified-Since-Version:
    name: If-Unmodified-Since-Version
    in: header
    required: true
    type: integer
    format: int64
    description: Item's current version number
  # API key
  Key:
    name: key
    in: query
    required: true
    default: '7f1iVhE5D2GHVkRYwpSszGUA'
    type: string
    description: The zotero API key. It is a key to which bearer you'll grant permission to write in the user or group library. <a href="https://www.zotero.org/settings/keys" target="blank">This key can be created or found in your settings</a> (it is called "private key").<br/>For the swaggerui user it is 7f1iVhE5D2GHVkRYwpSszGUA
  Key-Path:
    name: key
    in: path
    required: true
    default: '7f1iVhE5D2GHVkRYwpSszGUA'
    type: string
    description: The zotero API key. It is a key to which bearer you'll grant permission to write in the user or group library. <a href="https://www.zotero.org/settings/keys" target="blank">This key can be created or found in your settings</a> (it is called "private key").<br/>For the swaggerui user it is 7f1iVhE5D2GHVkRYwpSszGUA
  Key-Optional:
    name: key
    in: query
    required: false
    default: '7f1iVhE5D2GHVkRYwpSszGUA'
    type: string
    description: The zotero API key. It is a key to which bearer you'll grant permission to write in the user or group library. <a href="https://www.zotero.org/settings/keys" target="blank">This key can be created or found in your settings</a> (it is called "private key").<br/>For the swaggerui user it is 7f1iVhE5D2GHVkRYwpSszGUA
  # search parameters
  ItemType-Search:
    name: itemType
    in: query
    required: false
    type: string
    description: 'Search parameter: Item type search. It supports <a href="https://www.zotero.org/support/dev/web_api/v3/basics#search_syntax" target="_blank">the boolean search</a>'
  Q:
    name: q
    in: query
    required: false
    type: string
    description: 'Search parameter: Quick search. Searches titles and individual creator fields by default. Use the qmode parameter to change the mode. Currently supports phrase searching only.'
  QMode:
    name: qmode
    in: query
    required: false
    enum:
      - everything
      - titleCreatorYear
    default: titleCreatorYear
    type: string
    description: 'Search parameter: Quick search mode. To include full-text content in the search, use everything. Searching of other fields will be possible in the future.'
  Since:
    name: since
    in: query
    required: false
    default: 0
    type: integer
    format: int64
    description: 'Search parameter: Return only objects modified after the specified library verson.'
  Tag-Search:
    name: tag
    in: query
    required: false
    type: string
    description: 'Search parameter: Tag search. It supports <a href="https://www.zotero.org/support/dev/web_api/v3/basics#search_syntax" target="_blank">the boolean search</a>'
  # Sort parameters
  Sort:
    name: sort
    in: query
    required: true
    enum:
      - accessDate
      - addedBy
      - callNumber
      - creator
      - date
      - dateAdded
      - dateModified
      - journalAbbreviation
      - language
      - libraryCatalog
      - numItems
      - publicationTitle
      - publisher
      - rights
      - title
      - type
    default: dateModified
    type: string
    description: The name of the field by which entries are sorted.
  Direction:
    name: direction
    in: query
    required: false
    enum:
      - asc
      - desc
    type: string
    description: The sorting direction of the field specified in the sort parameter.
  Limit:
    name: limit
    in: query
    required: false
    default: 50
    type: integer
    format: int64
    description: The maximum number of results to return with a single request
  Start:
    name: start
    in: query
    required: false
    default: 0
    type: integer
    format: int64
    description: The index of the first result. Combine with the limit parameter to select a slice of the available results
  # format
  Format-multi-groups:
    name: format
    in: query
    required: true
    enum:
      - json
    type: string
    description: Answer format.
  Format-multi-items:
    name: format
    in: query
    required: true
    enum:
      - json
    type: string
    description: Answer format.
  Format-single-items:
    name: format
    in: query
    required: true
    enum:
      - json
      - atom
      - bib
      - bibtex
      - bookmarks
      - coins
      - csljson
      - mods
      - refer
      - rdf_bibliontology
      - rdf_dc
      - rdf_zotero
      - ris
      - tei
      - wikipedia
    type: string
    description: Answer format.
  Format-multi-tags:
    name: format
    in: query
    required: true
    enum:
      - json
    type: string
    description: Answer format.
  Format-single-tags:
    name: format
    in: query
    required: true
    enum:
      - json
    type: string
    description: Answer format.
  Format-multi-collections:
    name: format
    in: query
    required: true
    enum:
      - json
    type: string
    description: Answer format.
  Format-single-collections:
    name: format
    in: query
    required: true
    enum:
     - json
    type: string
    description: Answer format.
  Format-multi-searches:
    name: format
    in: query
    required: true
    enum:
      - json
    type: string
    description: Answer format.
  Format-single-searches:
    name: format
    in: query
    required: true
    enum:
     - json
    type: string
    description: Answer format.
  Include:
    name: include
    in: query
    required: false
    x-is-map: false
    type: string
    description: Formats to include in the response (for format=json).
  Content:
    name: content
    in: query
    required: false
    type: string
    description: Formats to include in the response (for format=atom).
  Style:
    name: style
    in: query
    required: false
    type: string
    description: Citation style to use for formatted references. Can be either the file name (without the .csl extension) of one of the styles in the Zotero Style Repository (e.g., apa) or the URL of a remote CSL file.
  Body-Item:
    name: body
    in: body
    required: false
    description: Get the new item description by calling <a href="#!/zotero/getItemTemplate" target="_blank">an item template request</a>. Then modify it and resubmit it to the server in an array.
    schema:
      $ref: '#/definitions/Items'
  Body-Update:
    name: body
    in: body
    required: true
    description: First, <a href="#!/zotero/getSpecificItem" target="_blank">retrieve the current version of the item</a><br/>The editable data will be found in the data property in the response.<br/>Copy all the data object, edit the values and send it to the server.
    schema: {}
  Body-Collection:
    name: body
    in: body
    required: false
    description: The Collection information
    schema:
      $ref: '#/definitions/Collection-Array'
  Body-Update-Collection:
    name: body
    in: body
    required: false
    description: First, <a href="#!/zotero/getSpecificCollection" target="_blank">retrieve the current version of the collection</a><br/>The editable data will be found in the data property in the response.<br/>Copy all the data object, edit the values and send it to the server.
    schema:
      $ref: '#/definitions/Collection'
  Body-Search:
    name: body
    in: body
    required: false
    description: First, <a href="#!/zotero/getSpecificItem" target="_blank">retrieve the current version of the item</a><br/>The editable data will be found in the data property in the response.<br/>Copy all the data object, edit the values and send it to the server.
    schema:
      $ref: '#/definitions/Search'
definitions:
  Items:
    type: array
    items:
      type: object
    example: |
      [
        {
          "itemType": "webpage",
          "title": "",
          "creators": [
            {
              "creatorType": "author",
              "firstName": "",
              "lastName": ""
            }
          ],
          "abstractNote": "",
          "websiteTitle": "",
          "websiteType": "",
          "date": "",
          "shortTitle": "",
          "url": "",
          "accessDate": "",
          "language": "",
          "rights": "",
          "extra": "",
          "tags": [],
          "collections": [],
          "relations": []
        }
      ]
  Collection:
    type: object
    properties:
      name:
        type: string
      parentCollection:
        type: boolean
    example: |
      {
        "name" : "Example",
        "parentCollection" : false
      }
  Collection-Array:
    type: array
    items:
      type: object
      properties:
        name:
          type: string
        parentCollection:
          type: boolean
    example: |
      [
        {
          "name" : "Example",
          "parentCollection" : false
        }
      ]
  Search:
    type: array
    items:
      type: object
      properties:
        name:
          type: string
          default: My Search
        conditions:
          type: array
          items:
            type: object
            properties:
              condition:
                type: string
                default: title
              operator:
                type: string
                default: contains
              value:
                type: string
                default: foo
    example: |
      [
        {
          "name": "My Search",
          "conditions": [
            {
              "condition": "title",
              "operator": "contains",
              "value": "foo"
            },
            {
              "condition": "date",
              "operator": "isInTheLast",
              "value": "7 days"
            }
          ]
        }
      ]
